#! /bin/bash 

ver="v0.1.0"

if [ -z $1 ]
then
  echo "Usage: version <program>"
  exit
fi

if [ $1 == -h ]
then
  echo "version displays the versions of programs you have installed."
  echo ""
  echo "Usage:"
  echo "  version <program>    display version of program"
  echo "                       (if known and installed)"
  echo "  version -h           display this help"
  echo "  version -c           display count of known programs"
  echo "  version -v           display version of version"
  echo "                       (yes, 'version version' also works!)"
  exit
fi

if [ $1 == -c ]
then
  # all instances of pipe or rparen in this file
  rawcount=$(egrep -o "\||)" $(which version) | wc -l)
  # subtract the 10 extraneous instances of pipe and rparen
  # 2 in the help, 7 in this block, and the default case below
  count=$(expr $rawcount - 10)
  echo "I know how to find the versions of $count programs!"
  exit
fi

if [ $1 == -v ]
then
  echo "version $ver"
  exit
fi

if ! command -v $1 &> /dev/null
then
    echo "'$1' does not seem to be installed"
    exit
fi

case $1 in

go | restic | yarn)
  $1 version
  ;;

conky | exa | firefox | kodi | lua | make | node | nordvpn | npm | perl \
  | ruby | slack | version)
  $1 -v
  ;;

alacritty | grep | python | rg | ssh | tmux)
  $1 -V
  ;;

ffmpeg | gimp | java | javac | kotlin | nano | nvim | swift | vi | vim)
  $1 -version
  ;;

arduino | awk | bash | clang | convert | dotnet | fzf | gcc | gdb | git \
  | gradle | inkscape | magick | ranger | rsync | rustc | sed | vlc | zsh)
  $1 --version
  ;;

*)
  echo "I don't know how to find the version of '$1'."
  echo "If you figure it out, let me know at https://github.com/bit101/version"
  ;;

esac
